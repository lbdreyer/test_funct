# Reference:
#   - https://cirrus-ci.org/guide/writing-tasks/
#   - https://cirrus-ci.org/guide/linux/
#   - https://hub.docker.com/_/gcc/
#   - https://hub.docker.com/_/python/

#
# Global defaults.
#
container:
  image: gcc:latest
  cpu: 2
  memory: 4G

#
# Testing (Linux)
#
linux_task:
  auto_cancellation: true
  
  matrix:
    env:
      PY_VER: "3.8"
      COVERAGE: "codecov"
  name: "${CIRRUS_OS}: py${PY_VER}"
  container:
    image: gcc:latest
  env:
    PATH: ${HOME}/miniconda/bin:${PATH}
  conda_cache:
    folder: ${HOME}/miniconda
    fingerprint_script:
      - wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      - echo "${CIRRUS_OS} $(sha256sum miniconda.sh)"
    populate_script:
      - bash miniconda.sh -b -p ${HOME}/miniconda
      - conda config --set always_yes yes --set changeps1 no
      - conda config --set show_channel_urls True
      - conda config --add channels conda-forge
      - conda update --quiet --name base conda
  test_script:
    - conda create --name py38 --file conda-linux-64.lock
    - conda list envs
    - source activate py38
    - pytest --cov-report=xml --cov
    - if [ -z $CODECOV_TOKEN ]; then  echo "available"; fi
    - if [ -z $CODACY_PROJECT_TOKEN ]; then  echo "available"; fi
    - export CODACY_PROJECT_TOKEN=6490aad310534bce894f1e6d76c08b37
    - printenv
    - bash <(curl -Ls https://coverage.codacy.com/get.sh)
    - ${COVERAGE} -h
    - echo ${COVERAGE}
